/****************************************************************************************/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Code by Crestlux(hemi0213) @@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  BOJ: 23747: 와드   @@@@@@@@@@@@@@*/
/*@@@@@*/#pragma GCC optimize("O3,unroll-loops")/*@@@  한별이 귀여워요! @@@@@@@@@@@@@@@@@*/
/*@@@@*/#pragma GCC target("avx2")/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/
/*@@@*/#include <bits/stdc++.h> /*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       @@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@            @ @@   @@@@@@@@@@@@@@@@@@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                           @@@@@@@@@@@@@@@@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @                               @@@@@@@@@@@@@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        //assert(0);-:..*)?-     @  @@@@@@@@@@@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/    using namespace std;bool //     /*@@@@@@@@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/     visited[1002][1002];int R,C,    /*@@@@@@@@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/    len, dx[]={ 0,0,-1,1 }//+%%+           @@@@@@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@*/    ,dy[] = { -1,1,0,0 };//char c;=%%-    /*@@@@@@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@*/    char graph[1002][1002];/*::*/string     /*@@@@@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@*/   s="";/*::*/char vision[1002][1002];//        @@@@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@*/   struct loc{int y,x;}loc;//:##-:void *v;#:     @@@@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@*/  void dfs(int y, int x, char c){for(int i//#:   @@@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@*/   =0; i<4;++i){int nx = x + dx[i]; int ny =//::    @@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@*/   y + dy[i];if (nx <= 0 || nx > C || ny <= 0//#.   @ @@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@*/   ||ny > R){continue;}if(!visited[ny][nx] && c //:.   @@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@*/   == graph[ny][nx]){visited[ny][nx] = true;//break;    @@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@*/   vision[ny][nx] = '.';dfs(ny, nx, graph[ny//continue   @@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@*/  ][nx]);}}}/*.+%:::::::::::::::::::*/int main(int     /*@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@*/  argc, char *argv[]){ios::sync_with_stdio(false);//..  /*@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@*/   cin.tie(NULL);/*fastio */memset(visited, false,/*:#:   @@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@*/  sizeof(visited)); memset(vision, '#', sizeof(vision/*   @ @@@@@*/
/*@@@@@@@@@@@@@@@@@@     */));/*memset..:*/cin >> R >> C;/*.*/for (int i = 1;/*   @ @@@@*/
/*@@@@@@@@@@@@@@@@@@    */ i <= R; ++i){/*%:*/for (int j = 1; j <= C; ++j){/*:%:   @@@@@*/
/*@@@@@@@@@@@@ @@  @    :*/cin >> graph[i][j];/*.get.input...%=.........*/}}/*+     @@@@*/
/*@@@@@@@@@@@ @@@@      =*/cin >> loc.y >> loc.x >> s;/*.**/len=s.length();/*+#     @@@@*/
/*@@@@@@@@@@            #+:--:=#--:::-:**/for (int i = 0; i < len; ++i){/*#..-%:    @@@@*/
/*@@@@@@@@@            .%=-:-:**/if/*-:#*/(s[i] == 'U')/*.....-%:*/loc.y--;/*:%-     @@@*/
/*@@@@@@@@      .   =+.:%---:-*/else if/**/(s[i] == 'D')/**:::%-:*/loc.y++;/*.*+     @@@*/
/*@@@@@@@      #%#-+%##*#:--:=*/else if/**/(s[i] == 'L')/*:::::::*/loc.x--;/*.+*     @@@*/
/*@@@         :%:=##:.*%\while(0);:-+#=+*/else if/*:::-%*/(s[i] == 'R')/*.....=*     @@@*/
/*@@          -%  .. .:%=:---%+:::-#%-.+#--*/loc.x++;/*:=%-:::.=*:::.*/else if/*      @@*/
/*@@         .#+    ..-%*/(/*%--=*%*:  -#--*/s[i] == 'W')/*+@+:-#:::.**.*/{/*.-#.     @@*/
/*@       -* **.    ..+%*/if/*%*##*-.   :#=-=-*/(!visited[loc.y][loc.x]/**%#.=*::     @@*/
/*@    -=.*/)/*   ...*/visited/*+-.    **/[loc.y][loc.x]/*::*/=true;/*#*/vision/*.    @@*/
/*     */[loc.y/*-#..+%#*/][/*-#-          -%*/loc.x]/*:#+.##*/='.'/*#-.:.-#::..:#.   @@*/
/*    .#:++  #= ..+:*/;/*+:---%-         */dfs(loc.y, loc.x, /* :*#-::::#=.:.-#:..    @@*/
/*    .#*/graph[loc.y]/**=:---%+           */[loc.x]);/*+%*%=  .+%*:.:*=.*/}}/*:     @@@*/
/*    .*.:.   #= +%: .*/vision/*%%.=*+=:.         :*#- :*#:    :#%+-*/[loc.y/*..:    @@@*/
/*     .  .-:*/][/*  .#=:-:=%@+=*#%%%*-.        ..   .      .-*#%*.*/loc.x]='.';/*   @@@*/
/*@      */for/*=%:   :#---:*@#:...:-+%@#:              .:-==-:.*/(int i=0;i<4/**-   @@@*/
/*@@     :#.   .#=   */;++i){/*..:.:....=#*            =#%@@@@@@%-#*/int nx,ny;/*    @@@*/
/*@@     */nx=loc.x+dx[i];/*#+......... ..           .%%*++++++#-=#.::.+*/ny=/**=    @ @*/
/*@@@    .#=   --:%-*/loc.y/*=..:.....               :.  ..........*/+dy[i];if(/*++   @@*/
/*@@@@   -#.   *+ =*/nx <= 0 ||/*...       ....       ...::.::-%:..*/nx > C ||/*.=%   @@*/
/*@@@@   */ny <= 0||ny > R) continue;/*    -*####*=     ..::.::.-%:...-%:......-%:    @@*/
/*@@@    .#- .-%.  :%-:--*+ ........      .#+=---=%=    ...*/vision[ny][nx]='.';/*#   @@*/
/*@@@    */}/*   -#:-*/for(int/*.....      .#:::::.**    ......*/ i=1;i<=R;++i/*.**   @@*/
/*@@@     */){/*#=   */for(/*%-  ..          ++:::::%-    ......*/int j=1;j<=C;/*=%.  @@*/
/*@@@     .=*-+*/++j){cout/*#+              ......-      .......:%-*/<<vision[i][j];/*@@*/
/*@@@@         -*%*#--:---%::%#-.                         ......:%-.:..*#........#=   @@*/
/*@@@@@          .-*/}/*-=%. .=##+:.                           .:%-.:..+*/cout<</*+   @@*/
/*@@@@@@          -*/"\n"/*=   .-*##+:                      .:+#%@-.:..=%*/;}/*..=*   @@*/
/*@@@@@@@  @      =*--:--+%%-    -*%@%#*=:..         ..:-=+#%@#+-%=.:..-%:.......-# . @@*/
/*@@@@@@@@@       +*:-:-:*+-#-  :%***#%@%*/return 0;/*#%%#*++=#-.:%=.:..-%-.......:#. @@*/
/*@@@@@@@@@@@ @   +*:----*+ =%- -%--::-+#%eo*/}/*%#+--::--#=.:%=.:..-%-......::# .    @@*/
/*@@@@@@@@@@@ @   +*-----*=  =%--%-::-:::=#%=....+%#=::-::---#%=:%-.:..-%-.....:::# . @@*/
/*@@@@@@@@@@@ @   =*=#--:*+   =#*%-:-:-:::-+##**##=-:--::-:--#+%+%-..:.-%-.....=*:# . @@*/
/*@@@@@@@@@@@@@   :##%#-:+#    -%%:::-:::::.-#*=%=--:-:::::--#.:%@-.:#=-%++..::*@=# . @@*/
/*@@@@@@@@@@@@    .#@+##--%=    -%---:.-::.::*+:%=---:.::--:-#. -%::###+@%%:..=#%#*   @@*/
/*@@@@@@@@@@@@     -%*.+##%%.    %=-:::::.::-##*%---:.:-:-:.+#  :%:+%:*%%=%:.-%=#%=   @@*/
/*@@@@@@@@@@@@@     -+  .:-:     #+:.::-::-=#%*#%+:-:::-:-::*+  -#*%%-*%::%=+%=.%+    @@*/
/*@@@@@@@@@@@@@@@                +*.---::+#%*%:-@%*::----::-%=  +%#:=%+. .*%#:        @@*/
/*@@@@@@@@@@@@@@                 *#--=+*##+-=%..%*##+-:-:::=%:  ::   -#-   .          @@*/
/*@@@@@@@@@@@@@@@               =@%%%%#+---.**  +*:+%#=::--#%=        -%=             @@*/
/*@@@@@@@@@@@@@@@@  @ @  @@    .%+++=::::-::%-  .#=:-*%*=-=%%#.        -%-        @ @@@@*/
/*@@@@@@@@@@@@@@@@@@   @@@@    .#*-:.:---::=%.   +*:-:-*###%%=      ..::*%-     @@ @@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@    .*%=::--::-+#    :%=:.---=#%=:-=+*##%%%%##=     @@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@      =%#=-::--*#==-::##::---*%%%%###*+=-:.       @ @@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@       .+##+=--#++***##%=:-+#*--:.                 @@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@       .:*%%%*     ..=%#%#-                     @@@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @        :-.        =*-                 @@   @@@@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                @    @@@@   @@@@@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                             @@  @@@@@@@@@@@@@@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@@    @    @     @  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@  @@@@@@       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/
/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/
